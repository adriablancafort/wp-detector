---
import metadata from "../metadata.json";
import { SEO, type Props as SEOProps } from "astro-seo";

interface Props {
  seo?: SEOProps;
}

const { seo } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/images/wordpress-detector-favicon.svg"
    />
    <meta name="generator" content={Astro.generator} />
    <SEO
      {...seo}
      title={seo?.title ?? metadata.default.title}
      description={seo?.description ?? metadata.default.description}
      canonical={seo?.canonical ?? null}
      noindex={seo?.noindex ?? metadata.default.noindex}
      nofollow={seo?.nofollow ?? metadata.default.nofollow}
      openGraph={{
        basic: {
          title: seo?.openGraph?.title ?? metadata.default.openGraph.title,
          type: seo?.openGraph?.type ?? metadata.default.openGraph.type,
          image: seo?.openGraph?.image ?? metadata.default.openGraph.image.url,
          url: seo?.openGraph?.url ?? metadata.default.openGraph.url,
        },
        ...(seo?.openGraph?.article && {
          article: {
            modifiedTime: seo?.openGraph?.article?.modifiedTime ?? null,
            authors: seo?.openGraph?.article?.authors ?? [],
            section: seo?.openGraph?.article?.section ?? null,
          },
        }),
        optional: {
          description:
            seo?.openGraph?.description ??
            metadata.default.openGraph.description,
        },
      }}
      twitter={{
        title: seo?.twitter?.title ?? metadata.default.twitter.title,
        description:
          seo?.twitter?.description ?? metadata.default.twitter.description,
        creator: seo?.twitter?.creator ?? metadata.default.twitter.creator,
        card: seo?.twitter?.card ?? metadata.default.twitter.card,
        site: seo?.twitter?.site ?? metadata.default.twitter.site,
        image: seo?.twitter?.image ?? metadata.default.twitter.image,
        imageAlt: seo?.twitter?.imageAlt ?? metadata.default.twitter.imageAlt,
      }}
    />
    <link
      rel="preload"
      href="/fonts/inter-400.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/inter-700.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/eb-garamond.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="manifest" href="/manifest.json" />
  </head>
  <body>
    <slot />
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-P8BVRMBZ"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      >
      </iframe>
    </noscript>
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "Inter";
    font-weight: 400;
    src: url("/fonts/inter-400.woff2") format("woff2");
    font-display: swap;
  }

  @font-face {
    font-family: "Inter";
    font-weight: 700;
    src: url("/fonts/inter-700.woff2") format("woff2");
    font-display: swap;
  }

  @font-face {
    font-family: "EB Garamond";
    font-weight: 400;
    src: url("/fonts/eb-garamond.woff2") format("woff2");
    font-display: swap;
  }

  * {
    margin: 0;
    padding: 0;
    border: 0;
  }

  html {
    scroll-behavior: smooth;
    scroll-padding-top: 100px;
  }

  body {
    background-color: #eff2ff;
    color: #1e1e1e;
    overflow-x: hidden;
    font-family: "Inter", system-ui, sans-serif;
  }

  img {
    -webkit-user-drag: none;
  }

  a {
    color: #1e1e1e;
  }

  a:hover {
    color: #606060;
  }

  p {
    margin-bottom: 0.3rem;
  }

  h1 {
    font-family: "EB Garamond";
    font-weight: 400;
  }

  button {
    color: #fff;
    background-color: #3858e9;
    border-radius: 2px;
    font-size: 18px;
    font-weight: 700;
    padding: 0.5rem 1rem;
  }

  button:hover {
    background-color: #213fd4;
  }

  button:focus {
    outline: none;
  }

  .button-container {
    display: flex;
    justify-content: center;
    margin-top: 1.5rem;
    margin-bottom: 2.5rem;
  }

  .border {
    border: 1px solid #cbcbcb;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 1.5rem;
  }

  @media (max-width: 1000px) {
    body {
      font-size: 12px;
    }

    .hide-1000 {
      display: none !important;
    }
  }
</style>

<script>
  window.addEventListener("load", () => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register("/sw.js");
    }
  });

  // Microsoft Clarity
  (function (c, l, a, r, i, t, y) {
    c[a] =
      c[a] ||
      function () {
        (c[a].q = c[a].q || []).push(arguments);
      };
    t = l.createElement(r);
    t.async = 1;
    t.src = "https://www.clarity.ms/tag/" + i;
    y = l.getElementsByTagName(r)[0];
    y.parentNode.insertBefore(t, y);
  })(window, document, "clarity", "script", "l5dfb7oih9");

  // Google Tag Manager
  (function (w, d, s, l, i) {
    w[l] = w[l] || [];
    w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
    var f = d.getElementsByTagName(s)[0],
      j = d.createElement(s),
      dl = l != "dataLayer" ? "&l=" + l : "";
    j.async = true;
    j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
    f.parentNode.insertBefore(j, f);
  })(window, document, "script", "dataLayer", "GTM-P8BVRMBZ");
</script>
