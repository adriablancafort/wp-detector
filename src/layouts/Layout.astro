---
const { title, description } = Astro.props;

import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/wordpress-detector-favicon.svg"
    />
    <link rel="manifest" href="/manifest.json" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ViewTransitions />
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "Inter";
    font-weight: 400;
    src: url("../fonts/inter-400.woff2") format("woff2");
  }

  @font-face {
    font-family: "Inter";
    font-weight: 700;
    src: url("../fonts/inter-700.woff2") format("woff2");
  }

  @font-face {
    font-family: "EB Garamond";
    font-weight: 400;
    src: url("../fonts/eb-garamond.woff2") format("woff2");
  }

  * {
    margin: 0;
    padding: 0;
    border: 0;
    font-family: "Inter";
  }

  html {
    scroll-behavior: smooth;
    scroll-padding-top: 100px;
  }

  body {
    background-color: #eff2ff;
    color: #1e1e1e;
    overflow-x: hidden;
  }

  img {
    -webkit-user-drag: none;
  }

  a {
    color: #1e1e1e;
  }

  a:hover {
    color: #606060;
  }

  p {
    margin-bottom: 0.3rem;
  }

  h1 {
    font-family: "EB Garamond";
    font-weight: 400;
  }

  button {
    color: #fff;
    background-color: #3858e9;
    border-radius: 2px;
    font-size: 18px;
    font-weight: 700;
    padding: 0.5rem 1rem;
  }

  button:hover {
    background-color: #213fd4;
  }

  button:focus {
    outline: none;
  }

  .button-container {
    display: flex;
    justify-content: center;
    margin-top: 1.5rem;
    margin-bottom: 2.5rem;
  }

  .border {
    border: 1px solid #cbcbcb;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 1.5rem;
  }

  @media (max-width: 1000px) {
    body {
      font-size: 12px;
    }

    .hide-1000 {
      display: none !important;
    }
  }
</style>

<script>
  window.addEventListener("load", () => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register("/sw.js");
    }
  });

  // Microsoft Clarity
  (function (c, l, a, r, i, t, y) {
    c[a] =
      c[a] ||
      function () {
        (c[a].q = c[a].q || []).push(arguments);
      };
    t = l.createElement(r);
    t.async = 1;
    t.src = "https://www.clarity.ms/tag/" + i;
    y = l.getElementsByTagName(r)[0];
    y.parentNode.insertBefore(t, y);
  })(window, document, "clarity", "script", "l5dfb7oih9");

  // Google Analytics
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "G-HRVVKEVNRN");
</script>

<script async src="https://www.googletagmanager.com/gtag/js?id=G-HRVVKEVNRN"
></script>
